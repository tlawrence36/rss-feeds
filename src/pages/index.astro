---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import rssIcon from '../assets/rss-icon.svg';
import articles from '../../feed.json';

const uniqueItems = articles.filter((item, index, array) => {
	return array.findIndex(p => p.title === item.title) === index;
});
const sortedFeedItems = uniqueItems.sort((a, b) => {
	const timeA = new Date(a.published);
	const timeB = new Date(b.published);
	return 	timeB.getTime() - timeA.getTime();
});

const uniqueFeedNames = [...new Set(articles.map(obj => obj.source))];

const formatDate = (dateString:string) => {
	const date = new Date(dateString);
	return date.toLocaleDateString('en-US');
}

---

<Layout title="RSS">
	<div id="slideout">
		<Image src={rssIcon} alt="RSS icon" class="icon"/>
		<div id='current'></div>
		<div id="slideout_inner">
			<ul>
				{uniqueFeedNames.map(item => (
					<li>{item}</li>
				))}
			</ul>
		</div>
	</div>

	<main>
		<div class="wrapper">
		{sortedFeedItems
			.map(item => (
				<div class="item" data-feed={item.source}>
					<div class="date">{formatDate(item.published)}</div>
					<div class="topic">{item.category || ''}</div>
					<div class="link" data-id={item.id}>{item.title}</div>
				</div>
			))}
		</div>
	</main>

	<dialog>
		<div id='article_container'>
			<div id='title'></div>
			<div id='storyWrapper'>
				<div id='story'></div>
			</div>
			<button>Close</button>
		</div>
	</dialog>
</Layout>

<script>
	import articles from '../../feed.json';

	// article links - listener
	const articleLinks = document.querySelectorAll('.link');
	articleLinks.forEach((e) => {
		const id = e.getAttribute('data-id') || '';
		e.addEventListener('click', () => displayArticle(id));
	});

	// side menu - listener
	const elArray = document.querySelectorAll('li');
	elArray.forEach((e) => {
		const feedName = e.innerHTML;
		e.addEventListener('click', () => setCurrentFeed(feedName))
	});

	function setCurrentFeed(feed:string): void {
		window.scrollTo({top: 0, behavior: 'smooth'});
		const allRows = document.querySelectorAll('div.item');
		allRows.forEach((el) => el.classList.remove('show'));
		const rows = document.querySelectorAll(`div[data-feed=${feed}]`);
		rows.forEach((el) => el.classList.add('show'));
		const el = document.getElementById("current")!;
		el.innerHTML = feed;
		// currentFeed.set(feed);
	}

	const displayArticle = (id:string) => {
		document.querySelector(`[data-id="${id}"]`)?.classList.add('visited');
		const dialog = document.querySelector("dialog")!;
		const closeButton = document.querySelector("dialog button")!;
		closeButton.addEventListener("click", () => {
  			dialog.close();
		});
		const content = articles.find((article) => article.id === +id);
		// populate title
		const title = document.getElementById('title')!;
		title.innerHTML = `<h3 style='height: 35px; line-height:1.1;'>${content?.title}</h3>`;
		// populate story
		const story = document.getElementById('story')!;
		story.innerHTML = '';
		story.scrollTo({top:0});
		content?.story.forEach((line) => {
			story.innerHTML += `<p style='margin-bottom: 26px'>${line}</p>`;
		});
		dialog.showModal();
		document.getElementById('article_container')?.scrollIntoView();

	}

	// currentFeed.subscribe((feed: string) => {
	// 	const allRows = document.querySelectorAll('div.item');
	// 	allRows.forEach((el) => el.classList.remove('show'));
	// 	const rows = document.querySelectorAll(`div[data-feed=${feed}]`);
	// 	rows.forEach((el) => el.classList.add('show'));
	// 	const el = document.getElementById("current")!;
	// 	el.innerHTML = feed;
	// });

	window.onload = function () {
		window.scrollTo({top: 0, behavior: 'smooth'});
		const initSource = articles[0].source;
		setCurrentFeed(initSource);
		// const rows = document.querySelectorAll(`div[data-feed=${initSource}]`);
		// rows.forEach((el) => el.classList.add('show'));
		// const el = document.getElementById("current")!;
		// el.innerHTML = initSource;
	}

	// window.onbeforeunload = () => {
	// 	console.log('leaving!');
	// }

</script>

<style>
	html::-webkit-scrollbar { display: none; }
	body {
  		font-family: 'JetBrains Mono Variable', monospace;
		background: rgb(15,105,170);
		background: linear-gradient(0deg, rgba(15,105,170,1) 0%, rgba(18,154,251,1) 100%);
		-ms-overflow-style: none;  /* IE and Edge */
  		scrollbar-width: none;  /* Firefox */
	}
	body::-webkit-scrollbar {
  		/* display: none; */
	}

	.link {
		color: #666;
		text-decoration: none;
		cursor: pointer;
	}
	.link:hover {
		text-decoration: none;
		color: #000;
	}
	
	.link.visited {
		color:#FFA500;
	}
	.icon {
		width: 32px;
		height: 32px;
		padding: 5px;
	}
	button {
		border: none;
		font-family: 'JetBrains Mono Variable';
		outline: none;
		cursor: pointer;
	}
	button:hover {
		text-decoration: underline;
	}
	main {
		display: flex;
		justify-content: center;
		margin: 0 50px 50px 50px;
		background: lightblue;
		opacity: 0.7;
		border-radius: 25px;
		border: 5px solid #fff;

	}
	.wrapper {
		width: 100%;
		padding: 25px;
	}

	.item {
		width: inherit;
		display: none;
	}
	.show {
		display: grid;
		grid-template-columns: 100px 150px 1fr;
	}
	.date {
		width: inherit;
		grid-column-start: 1;
		font-size: 0.9rem;
	}
	.topic {
		width: inherit;
		grid-column-start: 2;
		font-size: 0.9rem;
		font-weight: 600;
		text-align: center;
	}
	.link {
		width: inherit;
		grid-column-start: 3;
	}
	#title {
		margin-bottom: 25px;
	}

	/* "mobile second" for this site */
	@media only screen and (max-width: 992px) {
		main {
			margin: 0;
		}
		.show {
			grid-template-columns: 100px 1fr;
		}
		.link {
			grid-column-start: 2;
		}
		.topic {
			display: none;
		}
	}

/* slide out styles */
	#slideout {
		z-index: 1;
		position: fixed;
		top: 33px;
		left: 0;
		width: 45px;
		height: 139px;
		background: #FFA500;
		-webkit-transition-duration: 0.3s;
		-moz-transition-duration: 0.3s;
		-o-transition-duration: 0.3s;
		transition-duration: 0.3s;
		border-top-right-radius: 15px;
		border-bottom-right-radius: 15px;
	}
	#slideout_inner {
		background: #f90;
		position: fixed;
		top: 33px;
		left: -160px;
		width: 160px;
		min-height: 200px;
		-webkit-transition-duration: 0.3s;
		-moz-transition-duration: 0.3s;
		-o-transition-duration: 0.3s;
		transition-duration: 0.3s;
		cursor: pointer;
		border-bottom-right-radius: 20px;
	}
	#slideout:hover {
		left: 157px;
	}
	#slideout:hover #slideout_inner {
		left: 0;
	}
	#current {
		transform: rotate(-90deg);
    	top: 44px;
    	position: relative;
		color: #fff;
	}
	ul {
		list-style: none;
		color: #fff;
	}
	li:hover {
		color: #ddd;
	}

/* Dialog styles */
	dialog {
		width: 75%;
		height: 80%;
		border: none;
		background: transparent;
	}
	dialog::-webkit-scrollbar {
  		display: none;
	}
	dialog::backdrop {
		background: rgba(0, 0, 0, 0.5);
	}

	#storyWrapper {
		overflow-y: auto;
	}

/* paper background */
/* borrowed from https://codepen.io/kevinpowell/pen/dyavyPg */
	:root {
	--main-line-color: hsl(234, 62%, 86%);
	--side-line-color: hsl(350, 100%, 91%);
	--paper-color: hsl(0, 15%, 95%);
	--ink-color: hsl(0, 0%, 12%);
	--line-thickness: 2px;
	--top-space: 3lh;
	}

	#article_container {
		background: var(--paper-color);
		padding: calc(var(--top-space) - 2.75lh) 3rem 1rem 5.5rem;
		line-height: 1.62;
		color: var(--ink-color);
		background-image:
		/* the red line */
		linear-gradient(
		90deg,
		transparent,
		transparent 4rem,
		var(--side-line-color) 4rem,
		var(--side-line-color) 4.25rem,
		transparent 4.25rem
		),
		/*  The top space  */
		linear-gradient(
			var(--paper-color),
			var(--paper-color) var(--top-space),
			transparent var(--top-space)
		),
		/* the blue lines */
		repeating-linear-gradient(
			transparent,
			transparent calc(1lh - var(--line-thickness)),
			var(--main-line-color) calc(1lh - var(--line-thickness)),
			var(--main-line-color) 1lh,
			transparent 1lh
		);
		border-radius: 5px;
		min-height: 80%;
		box-shadow: inset 0px 0px 15px 3px #999;
	}

	@media only screen and (max-width: 640px) {
		dialog {
			width: 95%;
			height: 95%;
		}
	}

</style>